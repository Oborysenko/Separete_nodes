apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: cli
    name: cli
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      targetPort: 0
    selector:
      io.kompose.service: cli
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: orderer
    name: orderer
  spec:
    ports:
    - name: "7050"
      port: 7050
      targetPort: 7050
    selector:
      io.kompose.service: orderer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: peer0-org1
    name: peer0-org1
  spec:
    ports:
    - name: "7051"
      port: 7051
      targetPort: 7051
    - name: "7053"
      port: 7053
      targetPort: 7053
    selector:
      io.kompose.service: peer0-org1
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: cli
    name: cli
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: cli
      spec:
        containers:
        - args:
          - /bin/bash
          - -c
          - './scripts/script.sh ; sleep '
          env:
          - name: GOPATH
            value: /opt/gopath
          - name: CORE_VM_ENDPOINT
            value: unix:///host/var/run/docker.sock
          - name: CORE_LOGGING_LEVEL
            value: DEBUG
          - name: CORE_PEER_ID
            value: cli
          - name: CORE_PEER_ADDRESS
            value: peer0.org1.example.com:7051
          - name: CORE_PEER_LOCALMSPID
            value: Org1MSP
          - name: CORE_PEER_TLS_ENABLED
            value: "true"
          - name: CORE_PEER_TLS_CERT_FILE
            value: /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
          - name: CORE_PEER_TLS_KEY_FILE
            value: /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
          - name: CORE_PEER_TLS_ROOTCERT_FILE
            value: /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
          - name: CORE_PEER_MSPCONFIGPATH
            value: /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
          image: hyperledger/fabric-tools
          name: cli
          resources: {}
          tty: true
          volumeMounts:
          - mountPath: /etc/hosts
            name: cli-claim0
          - mountPath: /host/var/run/
            name: cli-claim1
          - mountPath: /opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go
            name: cli-claim2
          - mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
            name: cli-claim3
          - mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
            name: cli-claim4
          - mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
            name: cli-claim5
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        restartPolicy: Always
        volumes:
        - name: cli-claim0
          persistentVolumeClaim:
            claimName: cli-claim0
        - name: cli-claim1
          persistentVolumeClaim:
            claimName: cli-claim1
        - name: cli-claim2
          persistentVolumeClaim:
            claimName: cli-claim2
        - name: cli-claim3
          persistentVolumeClaim:
            claimName: cli-claim3
        - name: cli-claim4
          persistentVolumeClaim:
            claimName: cli-claim4
        - name: cli-claim5
          persistentVolumeClaim:
            claimName: cli-claim5
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: cli-claim0
    name: cli-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: cli-claim1
    name: cli-claim1
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: cli-claim2
    name: cli-claim2
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: cli-claim3
    name: cli-claim3
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: cli-claim4
    name: cli-claim4
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: cli-claim5
    name: cli-claim5
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: orderer
    name: orderer
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: orderer
      spec:
        containers:
        - args:
          - orderer
          env:
          - name: ORDERER_GENERAL_LOGLEVEL
            value: debug
          - name: ORDERER_GENERAL_LISTENADDRESS
            value: 0.0.0.0
          - name: ORDERER_GENERAL_GENESISMETHOD
            value: file
          - name: ORDERER_GENERAL_GENESISFILE
            value: /var/hyperledger/orderer/orderer.genesis.block
          - name: ORDERER_GENERAL_LOCALMSPID
            value: OrdererMSP
          - name: ORDERER_GENERAL_LOCALMSPDIR
            value: /var/hyperledger/orderer/msp
          - name: ORDERER_GENERAL_TLS_ENABLED
            value: "true"
          - name: ORDERER_GENERAL_TLS_PRIVATEKEY
            value: /var/hyperledger/orderer/tls/server.key
          - name: ORDERER_GENERAL_TLS_CERTIFICATE
            value: /var/hyperledger/orderer/tls/server.crt
          - name: ORDERER_GENERAL_TLS_ROOTCAS
            value: '[/var/hyperledger/orderer/tls/ca.crt]'
          image: hyperledger/fabric-orderer
          name: orderer-example-com
          ports:
          - containerPort: 7050
          resources: {}
          volumeMounts:
          - mountPath: /etc/hosts
            name: orderer-claim0
          - mountPath: /var/hyperledger/orderer/orderer.genesis.block
            name: orderer-claim1
          - mountPath: /var/hyperledger/orderer/msp
            name: orderer-claim2
          - mountPath: /var/hyperledger/orderer/tls
            name: orderer-claim3
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric
        restartPolicy: Always
        volumes:
        - name: orderer-claim0
          persistentVolumeClaim:
            claimName: orderer-claim0
        - name: orderer-claim1
          persistentVolumeClaim:
            claimName: orderer-claim1
        - name: orderer-claim2
          persistentVolumeClaim:
            claimName: orderer-claim2
        - name: orderer-claim3
          persistentVolumeClaim:
            claimName: orderer-claim3
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: orderer-claim0
    name: orderer-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: orderer-claim1
    name: orderer-claim1
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: orderer-claim2
    name: orderer-claim2
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: orderer-claim3
    name: orderer-claim3
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: peer0-org1
    name: peer0-org1
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: peer0-org1
      spec:
        containers:
        - args:
          - peer
          - node
          - start
          env:
          - name: CORE_PEER_ID
            value: peer0.org1.example.com
          - name: CORE_PEER_ADDRESS
            value: peer0.org1.example.com:7051
          - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
            value: peer0.org1.example.com:7051
          - name: CORE_PEER_LOCALMSPID
            value: Org1MSP
          - name: CORE_VM_ENDPOINT
            value: unix:///host/var/run/docker.sock
          - name: CORE_LOGGING_LEVEL
            value: DEBUG
          - name: CORE_PEER_TLS_ENABLED
            value: "true"
          - name: CORE_PEER_GOSSIP_USELEADERELECTION
            value: "true"
          - name: CORE_PEER_GOSSIP_ORGLEADER
            value: "false"
          - name: CORE_PEER_PROFILE_ENABLED
            value: "true"
          - name: CORE_PEER_TLS_CERT_FILE
            value: /etc/hyperledger/fabric/tls/server.crt
          - name: CORE_PEER_TLS_KEY_FILE
            value: /etc/hyperledger/fabric/tls/server.key
          - name: CORE_PEER_TLS_ROOTCERT_FILE
            value: /etc/hyperledger/fabric/tls/ca.crt
          image: hyperledger/fabric-peer
          name: peer0-org1-example-com
          ports:
          - containerPort: 7051
          - containerPort: 7053
          resources: {}
          volumeMounts:
          - mountPath: /etc/hosts
            name: peer0-org1-claim0
          - mountPath: /host/var/run/
            name: peer0-org1-claim1
          - mountPath: /etc/hyperledger/fabric/msp
            name: peer0-org1-claim2
          - mountPath: /etc/hyperledger/fabric/tls
            name: peer0-org1-claim3
          - mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations
            name: peer0-org1-claim4
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        restartPolicy: Always
        volumes:
        - name: peer0-org1-claim0
          persistentVolumeClaim:
            claimName: peer0-org1-claim0
        - name: peer0-org1-claim1
          persistentVolumeClaim:
            claimName: peer0-org1-claim1
        - name: peer0-org1-claim2
          persistentVolumeClaim:
            claimName: peer0-org1-claim2
        - name: peer0-org1-claim3
          persistentVolumeClaim:
            claimName: peer0-org1-claim3
        - name: peer0-org1-claim4
          persistentVolumeClaim:
            claimName: peer0-org1-claim4
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: peer0-org1-claim0
    name: peer0-org1-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: peer0-org1-claim1
    name: peer0-org1-claim1
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: peer0-org1-claim2
    name: peer0-org1-claim2
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: peer0-org1-claim3
    name: peer0-org1-claim3
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: peer0-org1-claim4
    name: peer0-org1-claim4
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
kind: List
metadata: {}

