apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: null
  labels:
    service: peer0-org1-example-com
  name: peer0-org1-example-com
  namespace: fabric
spec:
  replicas: 1
  selector:
    service: peer0-org1-example-com
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: peer0-org1-example-com
    spec:
      containers:
#      - command:
#        - sh
#        - -c
#      - command: ["/bin/sh", "-c", "chmod +x /root/start_peer.sh && /root/start_peer.sh"]
#        - tar -xvf /etc/hyperledger/fabric/peer0.org1.tar -C /etc/hyperledger/fabric/;
      - command: ["/bin/sh", "-c", "tar -xvf /etc/fabric_crypto/peer0.org1.tar -C /etc/hyperledger/fabric/ && chown -R root.root /etc/hyperledger/fabric/ && rm -f /etc/hyperledger/fabric/msp/config.yaml && peer node start && sleep 100000"] 
#        - sleep 100000
#        - peer node start
        env:
        - name: CORE_PEER_ID
          value: peer0.org1.example.com
        - name: CORE_PEER_ADDRESS
          value: peer0.org1.example.com:7051
        - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
          value: peer0.org1.example.com:7051
        - name: CORE_PEER_LOCALMSPID
          value: Org1MSP

        - name: CORE_VM_ENDPOINT
          value: unix:///host/var/run/docker.sock
        - name: CORE_LOGGING_LEVEL
          value: DEBUG
        - name: CORE_PEER_TLS_ENABLED
          value: "true"
        - name: CORE_PEER_GOSSIP_USELEADERELECTION
          value: "true"
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false"
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"

        - name: CORE_PEER_TLS_CERT_FILE
          value: /etc/hyperledger/fabric/tls/server.crt
        - name: CORE_PEER_TLS_KEY_FILE
          value: /etc/hyperledger/fabric/tls/server.key
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: /etc/hyperledger/fabric/tls/ca.crt          
        image: hyperledger/fabric-peer:x86_64-1.0.1
        imagePullPolicy: ""
        name: peer0-org1-example-com
        volumeMounts:
        - name: msptls
          mountPath: /etc/fabric_crypto
        - name: start-peer
          mountPath: /root
##        - mountPath: /etc/hosts
##          name: hosts
###        - mountPath: /host/var/run/
###          name: varrun
###        - mountPath: /etc/hyperledger/fabric
###          name: msptls 
#        - mountPath: /etc/hyperledger/fabric/msp
#          name: msp
#        - mountPath: /etc/hyperledger/fabric/tls
#          name: tls
        - mountPath: /volumemount
          name: myvol                      
        ports:
        - containerPort: 7051
        - containerPort: 7053
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: msptls
        configMap:
          name: cc-peer0-org1
      - name: start-peer
        configMap:
          name: start-peer
##      - name: hosts
##        hostPath: 
##          path: /etc/hosts
      - name: varrun
        hostPath: 
          path: /var/run/
###      - name: msptls
###        persistentVolumeClaim:
###          claimName: crypto-config-peer0-org1-pvc
#      - name: msp
#        hostPath: 
#          path: /home/oleks/bx_fabric/Separete_nodes/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp
#      - name: tls
#        hostPath: 
#          path: /home/oleks/bx_fabric/Separete_nodes/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls

      - name: myvol
        persistentVolumeClaim:
          claimName: mypvc
status:
  replicas: 0
